{
    "sourceFile": "app.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 39,
            "patches": [
                {
                    "date": 1653519322362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1653519330487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,11 @@\n const port = 3000 \n \n //create server variable  and function \n //every time some request a page on a server it will call this function \n-//tell the browser you will write html to\n+//tell the browser you will write html \n const server = http.createServer(function(req, res) {\n+    res.write\n     res.write(\"Welcome to Project Purple Cow\")\n     res.end()\n })\n \n"
                },
                {
                    "date": 1653519337151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n //create server variable  and function \n //every time some request a page on a server it will call this function \n //tell the browser you will write html \n const server = http.createServer(function(req, res) {\n-    res.write\n+    res.write(200, )\n     res.write(\"Welcome to Project Purple Cow\")\n     res.end()\n })\n \n"
                },
                {
                    "date": 1653519346982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n //create server variable  and function \n //every time some request a page on a server it will call this function \n //tell the browser you will write html \n const server = http.createServer(function(req, res) {\n-    res.write(200, )\n+    res.write(200, { 'Content-type'})\n     res.write(\"Welcome to Project Purple Cow\")\n     res.end()\n })\n \n"
                },
                {
                    "date": 1653519353701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n //create server variable  and function \n //every time some request a page on a server it will call this function \n //tell the browser you will write html \n const server = http.createServer(function(req, res) {\n-    res.write(200, { 'Content-type'})\n+    res.write(200, { 'Content-type': 'text'})\n     res.write(\"Welcome to Project Purple Cow\")\n     res.end()\n })\n \n"
                },
                {
                    "date": 1653519376911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n //create server variable  and function \n //every time some request a page on a server it will call this function \n //tell the browser you will write html \n const server = http.createServer(function(req, res) {\n-    res.write(200, { 'Content-type': 'text'})\n+    res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle\n     res.write(\"Welcome to Project Purple Cow\")\n     res.end()\n })\n \n"
                },
                {
                    "date": 1653519388055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n //create server variable  and function \n //every time some request a page on a server it will call this function \n //tell the browser you will write html \n const server = http.createServer(function(req, res) {\n-    res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle\n+    res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key\n     res.write(\"Welcome to Project Purple Cow\")\n     res.end()\n })\n \n"
                },
                {
                    "date": 1653519396627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n //create server variable  and function \n //every time some request a page on a server it will call this function \n //tell the browser you will write html \n const server = http.createServer(function(req, res) {\n-    res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key\n+    res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key, text/html is the \n     res.write(\"Welcome to Project Purple Cow\")\n     res.end()\n })\n \n"
                },
                {
                    "date": 1653519404184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n //create server variable  and function \n //every time some request a page on a server it will call this function \n //tell the browser you will write html \n const server = http.createServer(function(req, res) {\n-    res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key, text/html is the \n+    res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key, text/html is the dictionary that says parse as html\n     res.write(\"Welcome to Project Purple Cow\")\n     res.end()\n })\n \n"
                },
                {
                    "date": 1653519435593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n //create server to listen on port 3000 \n //install required library http to start server\n const http = require('http') \n \n+\n //tells server what port to listen too \n const port = 3000 \n \n //create server variable  and function \n"
                },
                {
                    "date": 1653519442870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n //create server to listen on port 3000 \n //install required library http to start server\n const http = require('http') \n+const fs = req\n \n-\n //tells server what port to listen too \n const port = 3000 \n \n //create server variable  and function \n"
                },
                {
                    "date": 1653519450089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n //create server to listen on port 3000 \n //install required library http to start server\n const http = require('http') \n-const fs = req\n+const fs = require('fs')\n \n //tells server what port to listen too \n const port = 3000 \n \n"
                },
                {
                    "date": 1653519461023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n //create server to listen on port 3000 \n //install required library http to start server\n const http = require('http') \n-const fs = require('fs')\n+const fs = require('fs') //importing another library to use \n \n //tells server what port to listen too \n const port = 3000 \n \n"
                },
                {
                    "date": 1653519468354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n //create server to listen on port 3000 \n //install required library http to start server\n const http = require('http') \n-const fs = require('fs') //importing another library to use \n+const fs = require('fs') //importing another library to use for file handling \n \n //tells server what port to listen too \n const port = 3000 \n \n"
                },
                {
                    "date": 1653519481775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,10 @@\n //every time some request a page on a server it will call this function \n //tell the browser you will write html \n const server = http.createServer(function(req, res) {\n     res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key, text/html is the dictionary that says parse as html\n+    \n+    \n     res.write(\"Welcome to Project Purple Cow\")\n     res.end()\n })\n \n"
                },
                {
                    "date": 1653519488804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,10 +10,10 @@\n //every time some request a page on a server it will call this function \n //tell the browser you will write html \n const server = http.createServer(function(req, res) {\n     res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key, text/html is the dictionary that says parse as html\n+    fs.\n     \n-    \n     res.write(\"Welcome to Project Purple Cow\")\n     res.end()\n })\n \n"
                },
                {
                    "date": 1653519498347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n //every time some request a page on a server it will call this function \n //tell the browser you will write html \n const server = http.createServer(function(req, res) {\n     res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key, text/html is the dictionary that says parse as html\n-    fs.\n+    fs.readFile('index.html')\n     \n     res.write(\"Welcome to Project Purple Cow\")\n     res.end()\n })\n"
                },
                {
                    "date": 1653519503990,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n //every time some request a page on a server it will call this function \n //tell the browser you will write html \n const server = http.createServer(function(req, res) {\n     res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key, text/html is the dictionary that says parse as html\n-    fs.readFile('index.html')\n+    fs.readFile('index.html', function(error))\n     \n     res.write(\"Welcome to Project Purple Cow\")\n     res.end()\n })\n"
                },
                {
                    "date": 1653519510785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,11 @@\n //every time some request a page on a server it will call this function \n //tell the browser you will write html \n const server = http.createServer(function(req, res) {\n     res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key, text/html is the dictionary that says parse as html\n-    fs.readFile('index.html', function(error))\n+    fs.readFile('index.html', function(error, data) {\n+        \n+    })\n     \n     res.write(\"Welcome to Project Purple Cow\")\n     res.end()\n })\n"
                },
                {
                    "date": 1653519519978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n //tell the browser you will write html \n const server = http.createServer(function(req, res) {\n     res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key, text/html is the dictionary that says parse as html\n     fs.readFile('index.html', function(error, data) {\n-        \n+        if (error)\n     })\n     \n     res.write(\"Welcome to Project Purple Cow\")\n     res.end()\n"
                },
                {
                    "date": 1653519527712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,11 @@\n //tell the browser you will write html \n const server = http.createServer(function(req, res) {\n     res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key, text/html is the dictionary that says parse as html\n     fs.readFile('index.html', function(error, data) {\n-        if (error)\n+        if (error) {\n+            res.write\n+        }\n     })\n     \n     res.write(\"Welcome to Project Purple Cow\")\n     res.end()\n"
                },
                {
                    "date": 1653519544347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n const server = http.createServer(function(req, res) {\n     res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key, text/html is the dictionary that says parse as html\n     fs.readFile('index.html', function(error, data) {\n         if (error) {\n-            res.write\n+            res.writeHead(404) //status code 404 means not found \n         }\n     })\n     \n     res.write(\"Welcome to Project Purple Cow\")\n"
                },
                {
                    "date": 1653519555113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,9 @@\n     res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key, text/html is the dictionary that says parse as html\n     fs.readFile('index.html', function(error, data) {\n         if (error) {\n             res.writeHead(404) //status code 404 means not found \n+            res.write('Page not found')\n         }\n     })\n     \n     res.write(\"Welcome to Project Purple Cow\")\n"
                },
                {
                    "date": 1653519561006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key, text/html is the dictionary that says parse as html\n     fs.readFile('index.html', function(error, data) {\n         if (error) {\n             res.writeHead(404) //status code 404 means not found \n-            res.write('Page not found')\n+            res.write('Page not found.')\n         }\n     })\n     \n     res.write(\"Welcome to Project Purple Cow\")\n"
                },
                {
                    "date": 1653519567151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,10 +13,10 @@\n     res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key, text/html is the dictionary that says parse as html\n     fs.readFile('index.html', function(error, data) {\n         if (error) {\n             res.writeHead(404) //status code 404 means not found \n-            res.write('Page not found.')\n-        }\n+            res.write('Page/File not found.')\n+        } else\n     })\n     \n     res.write(\"Welcome to Project Purple Cow\")\n     res.end()\n"
                },
                {
                    "date": 1653519573557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,11 @@\n     fs.readFile('index.html', function(error, data) {\n         if (error) {\n             res.writeHead(404) //status code 404 means not found \n             res.write('Page/File not found.')\n-        } else\n+        } else {\n+            res.write\n+        }\n     })\n     \n     res.write(\"Welcome to Project Purple Cow\")\n     res.end()\n"
                },
                {
                    "date": 1653519586659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,14 +15,12 @@\n         if (error) {\n             res.writeHead(404) //status code 404 means not found \n             res.write('Page/File not found.')\n         } else {\n-            res.write\n+            res.write(data)\n         }\n     })\n-    \n-    res.write(\"Welcome to Project Purple Cow\")\n-    res.end()\n+        res.end()\n })\n \n //setup server to listen on port \n //once server starts listening it will call this function if there is an error \n"
                },
                {
                    "date": 1653519622752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,14 +13,14 @@\n     res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key, text/html is the dictionary that says parse as html\n     fs.readFile('index.html', function(error, data) {\n         if (error) {\n             res.writeHead(404) //status code 404 means not found \n-            res.write('Page/File not found.')\n+            res.write('Page/File not found.') //\n         } else {\n             res.write(data)\n         }\n     })\n-        res.end()\n+    res.end()\n })\n \n //setup server to listen on port \n //once server starts listening it will call this function if there is an error \n"
                },
                {
                    "date": 1653519629388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key, text/html is the dictionary that says parse as html\n     fs.readFile('index.html', function(error, data) {\n         if (error) {\n             res.writeHead(404) //status code 404 means not found \n-            res.write('Page/File not found.') //\n+            res.write('Page/File not found.') //text that will write to website \n         } else {\n             res.write(data)\n         }\n     })\n"
                },
                {
                    "date": 1653519648847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n //every time some request a page on a server it will call this function \n //tell the browser you will write html \n const server = http.createServer(function(req, res) {\n     res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key, text/html is the dictionary that says parse as html\n-    fs.readFile('index.html', function(error, data) {\n+    fs.readFile('index.html', function(error, data) { \n         if (error) {\n             res.writeHead(404) //status code 404 means not found \n             res.write('Page/File not found.') //text that will write to website \n         } else {\n"
                },
                {
                    "date": 1653519656220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n //every time some request a page on a server it will call this function \n //tell the browser you will write html \n const server = http.createServer(function(req, res) {\n     res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key, text/html is the dictionary that says parse as html\n+   //calling readfile function, \n     fs.readFile('index.html', function(error, data) { \n         if (error) {\n             res.writeHead(404) //status code 404 means not found \n             res.write('Page/File not found.') //text that will write to website \n"
                },
                {
                    "date": 1653519663493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n //every time some request a page on a server it will call this function \n //tell the browser you will write html \n const server = http.createServer(function(req, res) {\n     res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key, text/html is the dictionary that says parse as html\n-   //calling readfile function, \n+   //calling readfile function, to read the \n     fs.readFile('index.html', function(error, data) { \n         if (error) {\n             res.writeHead(404) //status code 404 means not found \n             res.write('Page/File not found.') //text that will write to website \n"
                },
                {
                    "date": 1653519679439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n //every time some request a page on a server it will call this function \n //tell the browser you will write html \n const server = http.createServer(function(req, res) {\n     res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key, text/html is the dictionary that says parse as html\n-   //calling readfile function, to read the \n+   //calling readfile function, to read the index.html time in the project, this \n     fs.readFile('index.html', function(error, data) { \n         if (error) {\n             res.writeHead(404) //status code 404 means not found \n             res.write('Page/File not found.') //text that will write to website \n"
                },
                {
                    "date": 1653519697166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n //every time some request a page on a server it will call this function \n //tell the browser you will write html \n const server = http.createServer(function(req, res) {\n     res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key, text/html is the dictionary that says parse as html\n-   //calling readfile function, to read the index.html time in the project, this \n+   //calling readfile function, to read the index.html time in the project, this function will also handle errors if any and read all data within that file \n     fs.readFile('index.html', function(error, data) { \n         if (error) {\n             res.writeHead(404) //status code 404 means not found \n             res.write('Page/File not found.') //text that will write to website \n"
                },
                {
                    "date": 1653519709532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n const server = http.createServer(function(req, res) {\n     res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key, text/html is the dictionary that says parse as html\n    //calling readfile function, to read the index.html time in the project, this function will also handle errors if any and read all data within that file \n     fs.readFile('index.html', function(error, data) { \n+        \n         if (error) {\n             res.writeHead(404) //status code 404 means not found \n             res.write('Page/File not found.') //text that will write to website \n         } else {\n"
                },
                {
                    "date": 1653519718065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n const server = http.createServer(function(req, res) {\n     res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key, text/html is the dictionary that says parse as html\n    //calling readfile function, to read the index.html time in the project, this function will also handle errors if any and read all data within that file \n     fs.readFile('index.html', function(error, data) { \n-        \n+        //if statement if there is an error \n         if (error) {\n             res.writeHead(404) //status code 404 means not found \n             res.write('Page/File not found.') //text that will write to website \n         } else {\n"
                },
                {
                    "date": 1653519724510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n const server = http.createServer(function(req, res) {\n     res.write(200, { 'Content-type': 'text/html'}) //status code 200 is a good status code according to goodle, content-type is the key, text/html is the dictionary that says parse as html\n    //calling readfile function, to read the index.html time in the project, this function will also handle errors if any and read all data within that file \n     fs.readFile('index.html', function(error, data) { \n-        //if statement if there is an error \n+        //if statement to handle if there is an error \n         if (error) {\n             res.writeHead(404) //status code 404 means not found \n             res.write('Page/File not found.') //text that will write to website \n         } else {\n"
                },
                {
                    "date": 1653519735261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n         if (error) {\n             res.writeHead(404) //status code 404 means not found \n             res.write('Page/File not found.') //text that will write to website \n         } else {\n-            res.write(data)\n+            res.write(data) // this will run if there is no error \n         }\n     })\n     res.end()\n })\n"
                },
                {
                    "date": 1653519742982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n         if (error) {\n             res.writeHead(404) //status code 404 means not found \n             res.write('Page/File not found.') //text that will write to website \n         } else {\n-            res.write(data) // this will run if there is no error \n+            res.write(data) // this will run if there is no error, it will display the data within the file \n         }\n     })\n     res.end()\n })\n"
                },
                {
                    "date": 1653519761999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,8 @@\n         } else {\n             res.write(data) // this will run if there is no error, it will display the data within the file \n         }\n     })\n-    res.end()\n })\n \n //setup server to listen on port \n //once server starts listening it will call this function if there is an error \n"
                }
            ],
            "date": 1653519322361,
            "name": "Commit-0",
            "content": "//create server to listen on port 3000 \n//install required library http to start server\nconst http = require('http') \n\n//tells server what port to listen too \nconst port = 3000 \n\n//create server variable  and function \n//every time some request a page on a server it will call this function \n//tell the browser you will write html to\nconst server = http.createServer(function(req, res) {\n    res.write(\"Welcome to Project Purple Cow\")\n    res.end()\n})\n\n//setup server to listen on port \n//once server starts listening it will call this function if there is an error \nserver.listen(port, function(error) {\nif (error) {\n    console.log(\"something is not right\", error)\n} else {\n    console.log(\"Server is listening perfectly on port  \" + port)\n}\n})"
        }
    ]
}